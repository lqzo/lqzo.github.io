<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>ImageMagick 使用大全：从入门到精通</title>
    <link href="/2025/08/29/ImageMagick%20%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
    <url>/2025/08/29/ImageMagick%20%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<h1 id="ImageMagick-使用大全：从入门到精通"><a href="#ImageMagick-使用大全：从入门到精通" class="headerlink" title="ImageMagick 使用大全：从入门到精通"></a>ImageMagick 使用大全：从入门到精通</h1><p>ImageMagick 是一款功能强大的开源图像处理软件套件，它支持超过 200 种图像格式，提供了丰富的命令行工具，它可以读取、转换和写入多种格式的图像，能够进行图像格式转换、编辑、合成等操作。无论是简单的格式转换还是复杂的图像处理，ImageMagick 都能胜任。ImageMagick 的主要特点是能够通过命令行进行批量处理，非常适合自动化图像处理任务。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><ol><li>访问 <a href="https://imagemagick.org/">ImageMagick 官网</a></li><li>下载 Windows 版本的安装包</li><li>运行安装程序并按照提示完成安装</li><li>确保将 ImageMagick 添加到系统 PATH</li></ol><h3 id="macOS"><a href="#macOS" class="headerlink" title="macOS"></a>macOS</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 使用 Homebrew 安装</span><br>brew install imagemagick<br></code></pre></td></tr></table></figure><h3 id="Linux-Ubuntu-x2F-Debian"><a href="#Linux-Ubuntu-x2F-Debian" class="headerlink" title="Linux (Ubuntu&#x2F;Debian)"></a>Linux (Ubuntu&#x2F;Debian)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-get update<br>sudo apt-get install imagemagick<br></code></pre></td></tr></table></figure><h3 id="Linux-CentOS-x2F-RHEL"><a href="#Linux-CentOS-x2F-RHEL" class="headerlink" title="Linux (CentOS&#x2F;RHEL)"></a>Linux (CentOS&#x2F;RHEL)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo yum install ImageMagick<br><span class="hljs-comment"># 或者</span><br>sudo dnf install ImageMagick<br></code></pre></td></tr></table></figure><h2 id="工具介绍"><a href="#工具介绍" class="headerlink" title="工具介绍"></a>工具介绍</h2><p>ImageMagick 包含多个命令行工具，最常用的有：</p><ol><li><strong>convert</strong>：图像格式转换和处理</li><li><strong>mogrify</strong>：批量处理图像（直接修改原文件）</li><li><strong>identify</strong>：显示图像信息</li><li><strong>composite</strong>：图像合成</li><li><strong>montage</strong>：创建图像网格</li></ol><h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><p>ImageMagick 命令的基本格式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">command</span> [options] input_file output_file<br></code></pre></td></tr></table></figure><p>例如，将 JPEG 转换为 PNG：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">convert image.jpg image.png<br></code></pre></td></tr></table></figure><h2 id="常见用例"><a href="#常见用例" class="headerlink" title="常见用例"></a>常见用例</h2><h3 id="1-格式转换"><a href="#1-格式转换" class="headerlink" title="1. 格式转换"></a>1. 格式转换</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># JPEG 转 PNG</span><br>convert input.jpg output.png<br><br><span class="hljs-comment"># PNG 转 WebP</span><br>convert input.png output.webp<br><br><span class="hljs-comment"># 批量转换当前目录所有 JPG 为 PNG</span><br>mogrify -format png *.jpg<br></code></pre></td></tr></table></figure><h3 id="2-调整大小"><a href="#2-调整大小" class="headerlink" title="2. 调整大小"></a>2. 调整大小</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 指定宽度，高度按比例调整</span><br>convert input.jpg -resize 800 output.jpg<br><br><span class="hljs-comment"># 指定最大尺寸</span><br>convert input.jpg -resize 800x600 output.jpg<br><br><span class="hljs-comment"># 指定精确尺寸（可能变形）</span><br>convert input.jpg -resize 800x600! output.jpg<br><br><span class="hljs-comment"># 缩略图生成</span><br>convert input.jpg -resize 100x100^ -gravity center -extent 100x100 thumbnail.jpg<br></code></pre></td></tr></table></figure><h3 id="3-裁剪图像"><a href="#3-裁剪图像" class="headerlink" title="3. 裁剪图像"></a>3. 裁剪图像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 简单裁剪：从坐标 (10,10) 开始裁剪 200x200 区域</span><br>convert input.jpg -crop 200x200+10+10 output.jpg<br><br><span class="hljs-comment"># 自动裁剪空白边缘</span><br>convert input.jpg -trim output.jpg<br><br><span class="hljs-comment"># 裁剪指定区域并调整大小</span><br>convert input.jpg -crop 500x300+100+50 -resize 200x200 output.jpg<br></code></pre></td></tr></table></figure><h3 id="4-旋转和翻转"><a href="#4-旋转和翻转" class="headerlink" title="4. 旋转和翻转"></a>4. 旋转和翻转</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 旋转 90 度</span><br>convert input.jpg -rotate 90 output.jpg<br><br><span class="hljs-comment"># 水平翻转</span><br>convert input.jpg -flip output.jpg<br><br><span class="hljs-comment"># 垂直翻转</span><br>convert input.jpg -flop output.jpg<br></code></pre></td></tr></table></figure><h3 id="5-添加水印"><a href="#5-添加水印" class="headerlink" title="5. 添加水印"></a>5. 添加水印</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 文字水印</span><br>convert input.jpg -pointsize 36 -fill white -gravity southeast -annotate +10+10 <span class="hljs-string">&quot;Copyright&quot;</span> output.jpg<br><br><span class="hljs-comment"># 图片水印</span><br>composite -gravity southeast watermark.png input.jpg output.jpg<br></code></pre></td></tr></table></figure><h3 id="6-图像优化"><a href="#6-图像优化" class="headerlink" title="6. 图像优化"></a>6. 图像优化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 调整 JPEG 质量（1-100）</span><br>convert input.jpg -quality 85 output.jpg<br><br><span class="hljs-comment"># 压缩 PNG</span><br>convert input.png -strip -quality 85 output.png<br><br><span class="hljs-comment"># 减少颜色数量</span><br>convert input.png -colors 64 output.png<br></code></pre></td></tr></table></figure><h3 id="7-添加效果和滤镜"><a href="#7-添加效果和滤镜" class="headerlink" title="7. 添加效果和滤镜"></a>7. 添加效果和滤镜</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 高斯模糊</span><br>convert input.jpg -blur 0x8 output.jpg<br><br><span class="hljs-comment"># 锐化</span><br>convert input.jpg -sharpen 0x5 output.jpg<br><br><span class="hljs-comment"># 黑白效果</span><br>convert input.jpg -monochrome output.jpg<br><br><span class="hljs-comment"># sepia 怀旧效果</span><br>convert input.jpg -sepia-tone 80% output.jpg<br><br><span class="hljs-comment"># 添加边框</span><br>convert input.jpg -bordercolor black -border 10x10 output.jpg<br></code></pre></td></tr></table></figure><h3 id="8-批量处理"><a href="#8-批量处理" class="headerlink" title="8. 批量处理"></a>8. 批量处理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 批量调整大小</span><br>mogrify -resize 800x600 *.jpg<br><br><span class="hljs-comment"># 批量添加水印</span><br><span class="hljs-keyword">for</span> file <span class="hljs-keyword">in</span> *.jpg; <span class="hljs-keyword">do</span> composite -gravity southeast watermark.png <span class="hljs-string">&quot;<span class="hljs-variable">$file</span>&quot;</span> <span class="hljs-string">&quot;watermarked_<span class="hljs-variable">$file</span>&quot;</span>; <span class="hljs-keyword">done</span><br><br><span class="hljs-comment"># 批量转换格式并调整大小</span><br>mogrify -format png -resize 50% *.jpg<br></code></pre></td></tr></table></figure><h3 id="9-创建-GIF-动画"><a href="#9-创建-GIF-动画" class="headerlink" title="9. 创建 GIF 动画"></a>9. 创建 GIF 动画</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 从多个图像创建 GIF</span><br>convert -delay 20 -loop 0 *.jpg animation.gif<br><br><span class="hljs-comment"># 调整 GIF 大小</span><br>convert animation.gif -resize 400x300 resized_animation.gif<br><br><span class="hljs-comment"># 优化 GIF</span><br>convert animation.gif -layers optimize optimized_animation.gif<br></code></pre></td></tr></table></figure><h3 id="10-图像信息"><a href="#10-图像信息" class="headerlink" title="10. 图像信息"></a>10. 图像信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 显示图像详细信息</span><br>identify image.jpg<br><br><span class="hljs-comment"># 显示图像格式、尺寸和文件大小</span><br>identify -format <span class="hljs-string">&quot;%f: %m %wx%h %b\n&quot;</span> *.jpg<br><br><span class="hljs-comment"># 检查图像是否损坏</span><br>identify -regard-warnings image.jpg<br></code></pre></td></tr></table></figure><h2 id="命令速查表"><a href="#命令速查表" class="headerlink" title="命令速查表"></a>命令速查表</h2><table><thead><tr><th>功能</th><th>命令</th></tr></thead><tbody><tr><td>格式转换</td><td><code>convert input.jpg output.png</code></td></tr><tr><td>调整大小</td><td><code>convert input.jpg -resize 800x600 output.jpg</code></td></tr><tr><td>裁剪</td><td><code>convert input.jpg -crop WxH+X+Y output.jpg</code></td></tr><tr><td>旋转</td><td><code>convert input.jpg -rotate 90 output.jpg</code></td></tr><tr><td>添加文字</td><td><code>convert input.jpg -pointsize 36 -annotate +X+Y &quot;Text&quot; output.jpg</code></td></tr><tr><td>模糊</td><td><code>convert input.jpg -blur 0x8 output.jpg</code></td></tr><tr><td>锐化</td><td><code>convert input.jpg -sharpen 0x5 output.jpg</code></td></tr><tr><td>批量处理</td><td><code>mogrify -option *.jpg</code></td></tr><tr><td>图像信息</td><td><code>identify image.jpg</code></td></tr></tbody></table><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>ImageMagick 是一个功能强大且灵活的图像处理工具，特别适合批量处理和自动化任务。通过掌握这些基本命令和技巧，你可以高效地完成各种图像处理工作。随着使用的深入，你会发现 ImageMagick 还有更多高级功能等待探索。</p><h2 id="更多资源"><a href="#更多资源" class="headerlink" title="更多资源"></a>更多资源</h2><ul><li><a href="https://imagemagick.org/script/command-line-tools.php">ImageMagick 命令行工具</a></li><li><a href="https://imagemagick.org/script/examples.php">ImageMagick 示例</a></li><li><a href="https://www.imagemagick.org/discourse-server/">ImageMagick 社区论坛</a></li></ul><p>希望这份指南能帮助你更好地使用 ImageMagick！如有任何问题或建议，欢迎留言讨论。</p>]]></content>
    
    
    
    <tags>
      
      <tag>ImageMagick</tag>
      
      <tag>图片处理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>📁 终极 unzip 命令大全：掌握Linux解压的艺术 🚀</title>
    <link href="/2025/08/11/unzip%20%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
    <url>/2025/08/11/unzip%20%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<h1 id="📁-终极-unzip-命令大全：掌握-Linux-解压的艺术-🚀"><a href="#📁-终极-unzip-命令大全：掌握-Linux-解压的艺术-🚀" class="headerlink" title="📁 终极 unzip 命令大全：掌握 Linux 解压的艺术 🚀"></a>📁 终极 unzip 命令大全：掌握 Linux 解压的艺术 🚀</h1><p>无论你是 Linux 新手还是资深运维，ZIP 文件处理都是必备技能。本文整理了最完整的 unzip 使用指南，附 30+个实用场景示例，助你轻松应对各种压缩包！（文末附问题排查技巧）</p><h2 id="🔧-一、安装与更新"><a href="#🔧-一、安装与更新" class="headerlink" title="🔧 一、安装与更新"></a>🔧 一、安装与更新</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Debian/Ubuntu</span><br>sudo apt update &amp;&amp; sudo apt install unzip<br><br><span class="hljs-comment"># RHEL/CentOS</span><br>sudo yum install unzip<br><br><span class="hljs-comment"># macOS (Homebrew)</span><br>brew install unzip<br><br><span class="hljs-comment"># 查看版本</span><br>unzip -v<br></code></pre></td></tr></table></figure><h2 id="📂-二、基础解压操作"><a href="#📂-二、基础解压操作" class="headerlink" title="📂 二、基础解压操作"></a>📂 二、基础解压操作</h2><table><thead><tr><th>场景</th><th>命令</th><th>效果</th></tr></thead><tbody><tr><td>解压到当前目录</td><td>unzip file.zip</td><td>文件释放到当前文件夹</td></tr><tr><td>解压到指定目录</td><td>unzip file.zip -d &#x2F;target&#x2F;path</td><td>自动创建目标目录</td></tr><tr><td>覆盖解压</td><td>unzip -o file.zip</td><td>强制覆盖同名文件</td></tr><tr><td>安全解压</td><td>unzip -n file.zip</td><td>跳过同名文件不覆盖</td></tr><tr><td>静默解压</td><td>unzip -q file.zip</td><td>不显示解压过程</td></tr></tbody></table><h2 id="🔍-三、查看压缩包内容"><a href="#🔍-三、查看压缩包内容" class="headerlink" title="🔍 三、查看压缩包内容"></a>🔍 三、查看压缩包内容</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看文件列表</span><br>unzip -l archive.zip<br><br><span class="hljs-comment"># 查看详细信息（大小/压缩率）</span><br>unzip -v archive.zip<br><br><span class="hljs-comment"># 搜索特定文件</span><br>unzip -l archive.zip | grep <span class="hljs-string">&quot;*.txt&quot;</span><br><br><span class="hljs-comment"># 测试压缩包完整性</span><br>unzip -t archive.zip  <span class="hljs-comment"># 显示&quot;OK&quot;表示正常</span><br></code></pre></td></tr></table></figure><h2 id="🛠️-四、高级场景操作"><a href="#🛠️-四、高级场景操作" class="headerlink" title="🛠️ 四、高级场景操作"></a>🛠️ 四、高级场景操作</h2><h3 id="⚠️-加密压缩包处理"><a href="#⚠️-加密压缩包处理" class="headerlink" title="⚠️ 加密压缩包处理"></a>⚠️ 加密压缩包处理</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 交互式输入密码</span><br>unzip -P 密码 file.zip<br><br><span class="hljs-comment"># 从文件读取密码（脚本场景）</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;mypassword&quot;</span> &gt; pass.txt<br>unzip -P $(<span class="hljs-built_in">cat</span> pass.txt) file.zip<br></code></pre></td></tr></table></figure><h3 id="🌐-中文乱码解决方案"><a href="#🌐-中文乱码解决方案" class="headerlink" title="🌐 中文乱码解决方案"></a>🌐 中文乱码解决方案</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 尝试常见编码</span><br>unzip -O CP936 file.zip   <span class="hljs-comment"># GBK编码</span><br>unzip -O GB18030 file.zip <span class="hljs-comment"># 扩展编码</span><br><br><span class="hljs-comment"># 终极方案：使用unar工具</span><br>sudo apt install unar      <span class="hljs-comment"># 安装</span><br>unar -e GBK file.zip      <span class="hljs-comment"># 自动识别编码</span><br></code></pre></td></tr></table></figure><h3 id="🔁-批量解压操作"><a href="#🔁-批量解压操作" class="headerlink" title="🔁 批量解压操作"></a>🔁 批量解压操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 解压当前目录所有ZIP</span><br>find . -name <span class="hljs-string">&quot;*.zip&quot;</span> -<span class="hljs-built_in">exec</span> unzip &#123;&#125; \;<br><br><span class="hljs-comment"># 解压到同名文件夹</span><br><span class="hljs-keyword">for</span> z <span class="hljs-keyword">in</span> *.zip; <span class="hljs-keyword">do</span> unzip <span class="hljs-string">&quot;<span class="hljs-variable">$z</span>&quot;</span> -d <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;z%.*&#125;</span>&quot;</span>; <span class="hljs-keyword">done</span><br><br><span class="hljs-comment"># 批量解压到指定目录</span><br><span class="hljs-keyword">for</span> z <span class="hljs-keyword">in</span> *.zip; <span class="hljs-keyword">do</span> unzip <span class="hljs-string">&quot;<span class="hljs-variable">$z</span>&quot;</span> -d /target/path; <span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><h3 id="🧩-选择性解压"><a href="#🧩-选择性解压" class="headerlink" title="🧩 选择性解压"></a>🧩 选择性解压</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 解压单个文件</span><br>unzip archive.zip <span class="hljs-string">&quot;path/to/specific.file&quot;</span><br><br><span class="hljs-comment"># 解压jpg文件（保留目录结构）</span><br>unzip archive.zip <span class="hljs-string">&quot;*.jpg&quot;</span><br><br><span class="hljs-comment"># 解压jpg文件（平铺到当前目录）</span><br>unzip -j archive.zip <span class="hljs-string">&quot;*.jpg&quot;</span><br><br><span class="hljs-comment"># 解压所有文件（包括子目录）</span><br>unzip -r archive.zip<br></code></pre></td></tr></table></figure><h3 id="🔗-从-URL-直接解压"><a href="#🔗-从-URL-直接解压" class="headerlink" title="🔗 从 URL 直接解压"></a>🔗 从 URL 直接解压</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 下载并解压到当前目录</span><br>curl -L https://example.com/file.zip | funzip &gt; target.file<br><br><span class="hljs-comment"># 下载并解压到指定目录</span><br>wget -qO- https://example.com/file.zip | unzip -d ~/target -<br><br><span class="hljs-comment"># 下载并解压到当前目录（进度条）</span><br>wget -O- https://example.com/file.zip | pv | unzip -<br></code></pre></td></tr></table></figure><h2 id="📦-五、扩展应用：创建与修改-ZIP"><a href="#📦-五、扩展应用：创建与修改-ZIP" class="headerlink" title="📦 五、扩展应用：创建与修改 ZIP"></a>📦 五、扩展应用：创建与修改 ZIP</h2><p>需配合 zip 命令使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 压缩目录</span><br>zip -r archive.zip /folder/<br><br><span class="hljs-comment"># 添加文件到现有压缩包</span><br>zip -u archive.zip newfile.txt<br><br><span class="hljs-comment"># 创建加密压缩包</span><br>zip -e secure.zip file.txt  <span class="hljs-comment"># 交互式设置密码</span><br>zip -e -P <span class="hljs-string">&quot;pass123&quot;</span> secure.zip folder/<br></code></pre></td></tr></table></figure><h2 id="🚨-六、报错解决方案"><a href="#🚨-六、报错解决方案" class="headerlink" title="🚨 六、报错解决方案"></a>🚨 六、报错解决方案</h2><table><thead><tr><th>错误</th><th>原因</th><th>修复方案</th></tr></thead><tbody><tr><td>caution: filename not matched: 路径错误&#x2F;文件缺失</td><td>检查命令顺序：unzip -o file.zip -d dir</td><td>确认文件存在并路径正确</td></tr><tr><td>[file.zip] must be a directory</td><td>缺少-d 参数的目标路径</td><td>添加有效目录：unzip file.zip -d target_dir</td></tr><tr><td>skipping: file.txt need PK compat. v5.1</td><td>ZIP64 格式不兼容</td><td>使用最新版 unzip 或 7zip</td></tr><tr><td>invalid zip file with overlapped components</td><td>压缩包损坏</td><td>尝试修复：zip -FF broken.zip –out fixed.zip</td></tr><tr><td>unzip: command not found</td><td>未安装</td><td>通过包管理器安装</td></tr></tbody></table><h2 id="💡-七、替代工具推荐"><a href="#💡-七、替代工具推荐" class="headerlink" title="💡 七、替代工具推荐"></a>💡 七、替代工具推荐</h2><h3 id="1-7zip"><a href="#1-7zip" class="headerlink" title="1. 7zip"></a>1. 7zip</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">7z x file.zip -o/target  <span class="hljs-comment"># 支持更多压缩格式</span><br></code></pre></td></tr></table></figure><h3 id="2-bsdtar"><a href="#2-bsdtar" class="headerlink" title="2. bsdtar"></a>2. bsdtar</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">bsdtar -xf file.zip      <span class="hljs-comment"># 跨平台兼容性强</span><br></code></pre></td></tr></table></figure><h3 id="3-unar（中文友好）"><a href="#3-unar（中文友好）" class="headerlink" title="3. unar（中文友好）"></a>3. unar（中文友好）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">unar -o /target file.zip <span class="hljs-comment"># 自动处理编码问题</span><br></code></pre></td></tr></table></figure><h3 id="4-压缩大文件时建议分卷"><a href="#4-压缩大文件时建议分卷" class="headerlink" title="4. 压缩大文件时建议分卷"></a>4. 压缩大文件时建议分卷</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">zip -s 100m bigfile.zip source.file  <span class="hljs-comment"># 分割成100MB的文件</span><br><br>unzip -s-100m bigfile.zip            <span class="hljs-comment"># 合并解压</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>unzip</tag>
      
      <tag>解压</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>.gitignore 文件指南</title>
    <link href="/2023/01/31/gitignore-%E6%96%87%E4%BB%B6%E6%8C%87%E5%8D%97/"/>
    <url>/2023/01/31/gitignore-%E6%96%87%E4%BB%B6%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<h2 id="gitignore-文件是什么？"><a href="#gitignore-文件是什么？" class="headerlink" title=".gitignore 文件是什么？"></a>.gitignore 文件是什么？</h2><p>一般我们总会有些文件无需纳入 <a href="https://git-scm.com/">Git</a> 的管理，也不希望它们总出现在未跟踪文件列表。 通常都是些自动生成的文件，比如日志文件，或者编译过程中创建的临时文件，以及包含敏感信息的配置文件等。 在这种情况下，我们可以创建一个名为 <code>.gitignore</code> 的文件，列出要忽略的文件的模式。</p><p>来看一个实际的 .gitignore 例子:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">cat</span> .gitignore<br>*.[oa]<br>*~<br></code></pre></td></tr></table></figure><p>第一行告诉 Git 忽略所有以 <code>.o</code> 或 <code>.a</code> 结尾的文件。一般这类对象文件和存档文件都是编译过程中出现的。第二行告诉 Git 忽略所有名字以波浪符(<code>~</code>)结尾的文件，许多文本编辑软件(比如 Emacs)都用这样的文件名保存副本。</p><p>此外，你可能还需要忽略 <code>log</code>，<code>tmp</code> 或者 <code>pid</code> 目录，以及自动生成的文档等等。 要养成一开始就为你的新仓库设置好 <code>.gitignore</code> 文件的习惯，以免将来误提交这类无用的文件。</p><h2 id="gitignore-格式规范"><a href="#gitignore-格式规范" class="headerlink" title=".gitignore 格式规范"></a>.gitignore 格式规范</h2><p>文件 .gitignore 的格式规范如下:</p><ul><li>所有空行或者以 <code>#</code> 开头的行都会被 <code>Git</code> 忽略。</li><li>可以使用标准的 <code>glob</code> 模式匹配，它会递归地应用在整个工作区中。</li><li>匹配模式可以以(<code>/</code>)开头防止递归。</li><li>匹配模式可以以(<code>/</code>)结尾指定目录。</li><li>要忽略指定模式以外的文件或目录，可以在模式前加上叹号(<code>!</code>)取反。</li></ul><p>所谓的 <code>glob</code> 模式是指 shell 所使用的简化了的正则表达式。</p><ul><li>星号 (<code>*</code>) 匹配零个或多个任意字符;</li><li>[<code>abc</code>] 匹配任何一个列在方括号中的字符 (这个例子要么匹配一个 <code>a</code>，要么匹配一个 <code>b</code>，要么匹配一个 <code>c</code>);</li><li>问号 (<code>?</code>) 只匹配一个任意字符;</li><li>如果在方括号中使用短划线分隔两个字符，表示所有在这两个字符范围内的都可以匹配 (比如 [<code>0-9</code>] 表示匹配所有 <code>0</code> 到 <code>9</code> 的数字)。</li><li>使用两个星号 (<code>**</code>) 表示匹配任意中间目录，比如 <code>a/**/z</code> 可以 配 <code>a/z</code>、<code>a/b/z</code> 或 <code>a/b/c/z</code> 等。</li></ul><p>下面是一个 <code>.gitignore</code> 文件的例子:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 排除所有.开头的隐藏文件</span><br>.*<br><span class="hljs-comment"># 忽略所有的 .a 文件</span><br>*.a<br><span class="hljs-comment"># 但跟踪所有的 lib.a，即便你在前面忽略了 .a 文件</span><br>!lib.a<br><span class="hljs-comment"># 只忽略当前目录下的 TODO 文件，而不忽略 subdir/TODO</span><br>/TODO<br><span class="hljs-comment"># 忽略任何目录下名为 build 的文件夹</span><br>build/<br><span class="hljs-comment"># 忽略 doc/notes.txt，但不忽略 doc/server/arch.txt</span><br>doc/*.txt<br><span class="hljs-comment"># 忽略 doc/ 目录及其所有子目录下的 .pdf 文件</span><br>doc/**/*.pdf<br></code></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul><li>可以通过 <code>git check-ignore</code> 命令查询文件被忽略的具体规则。</li><li><a href="https://github.com/">Github</a> 有一个十分详细的针对数十种项目及语言的 <code>.gitignore</code> 文件列表， 你可以在 <a href="https://github.com/github/gitignore">https://github.com/github/gitignore</a> 找到它。</li><li>在最简单的情况下，一个仓库可能只根目录下有一个 <code>.gitignore</code> 文件，它递归地应用到整个仓库中。 然而，子目录下也可以有额外的 <code>.gitignore</code> 文件。子目录中的 <code>.gitignore</code> 文件中的规则只作用于它所在的目录中。</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo 常用指令</title>
    <link href="/2022/09/26/Hexo%20%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/"/>
    <url>/2022/09/26/Hexo%20%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h2 id="什么是-Hexo？"><a href="#什么是-Hexo？" class="headerlink" title="什么是 Hexo？"></a>什么是 Hexo？</h2><p><a href="https://hexo.io/">Hexo</a> 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h2 id="init"><a href="#init" class="headerlink" title="init"></a>init</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo init [folder]<br></code></pre></td></tr></table></figure><p>新建一个网站。如果没有设置 <code>folder</code> ，Hexo 默认在目前的文件夹建立网站。</p><p>本命令相当于执行了以下几步：</p><ol><li>Git clone <a href="https://github.com/hexojs/hexo-starter">hexo-starter</a> 和 <a href="https://github.com/hexojs/hexo-theme-landscape">hexo-theme-landscape</a> 主题到当前目录或指定目录。</li><li>使用 <a href="https://classic.yarnpkg.com/lang/en/">Yarn 1</a>、<a href="https://pnpm.js.org/">pnpm</a> 或 <a href="https://docs.npmjs.com/cli/install">npm</a> 包管理器下载依赖（如有已安装多个，则列在前面的优先）。npm 默认随 <a href="/docs/#Install-Node-js">Node.js</a> 安装。</li></ol><h2 id="new"><a href="#new" class="headerlink" title="new"></a>new</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new [layout] &lt;title&gt;<br></code></pre></td></tr></table></figure><p>新建一篇文章。如果没有设置 <code>layout</code> 的话，默认使用 <a href="configuration.html">_config.yml</a> 中的 <code>default_layout</code> 参数代替。如果标题包含空格的话，请使用引号括起来。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;post title with whitespace&quot;</span><br></code></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>-p</code>, <code>--path</code></td><td>自定义新文章的路径</td></tr><tr><td><code>-r</code>, <code>--replace</code></td><td>如果存在同名文章，将其替换</td></tr><tr><td><code>-s</code>, <code>--slug</code></td><td>文章的 Slug，作为新文章的文件名和发布后的 URL</td></tr></tbody></table><p>默认情况下，Hexo 会使用文章的标题来决定文章文件的路径。对于独立页面来说，Hexo 会创建一个以标题为名字的目录，并在目录中放置一个 <code>index.md</code> 文件。你可以使用 <code>--path</code> 参数来覆盖上述行为、自行决定文件的目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new page --path about/me <span class="hljs-string">&quot;About me&quot;</span><br></code></pre></td></tr></table></figure><p>以上命令会创建一个 <code>source/about/me.md</code> 文件，同时 Front Matter 中的 title 为 <code>&quot;About me&quot;</code></p><p>注意！title 是必须指定的！如果你这么做并不能达到你的目的：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new page --path about/me<br></code></pre></td></tr></table></figure><p>此时 Hexo 会创建 <code>source/_posts/about/me.md</code>，同时 <code>me.md</code> 的 Front Matter 中的 title 为 <code>&quot;page&quot;</code>。这是因为在上述命令中，hexo-cli 将 <code>page</code> 视为指定文章的标题、并采用默认的 <code>layout</code>。</p><h2 id="generate"><a href="#generate" class="headerlink" title="generate"></a>generate</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>生成静态文件。</p><table><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td><code>-d</code>, <code>--deploy</code></td><td>文件生成后立即部署网站</td></tr><tr><td><code>-w</code>, <code>--watch</code></td><td>监视文件变动</td></tr><tr><td><code>-b</code>, <code>--bail</code></td><td>生成过程中如果发生任何未处理的异常则抛出异常</td></tr><tr><td><code>-f</code>, <code>--force</code></td><td>强制重新生成文件<br>Hexo 引入了差分机制，如果 <code>public</code> 目录存在，那么 <code>hexo g</code> 只会重新生成改动的文件。<br>使用该参数的效果接近 <code>hexo clean &amp;&amp; hexo generate</code></td></tr><tr><td><code>-c</code>, <code>--concurrency</code></td><td>最大同时生成文件的数量，默认无限制</td></tr></tbody></table><p>该命令可以简写为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo g<br></code></pre></td></tr></table></figure><h2 id="publish"><a href="#publish" class="headerlink" title="publish"></a>publish</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo publish [layout] &lt;filename&gt;<br></code></pre></td></tr></table></figure><p>发表草稿。</p><h2 id="server"><a href="#server" class="headerlink" title="server"></a>server</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>启动服务器。默认情况下，访问网址为： <code>http://localhost:4000/</code>。</p><table><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td><code>-p</code>, <code>--port</code></td><td>重设端口</td></tr><tr><td><code>-s</code>, <code>--static</code></td><td>只使用静态文件</td></tr><tr><td><code>-l</code>, <code>--log</code></td><td>启动日记记录，使用覆盖记录格式</td></tr></tbody></table><h2 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>部署网站。</p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>-g</code>, <code>--generate</code></td><td>部署之前预先生成静态文件</td></tr></tbody></table><p>该命令可以简写为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo d<br></code></pre></td></tr></table></figure><h2 id="render"><a href="#render" class="headerlink" title="render"></a>render</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo render &lt;file1&gt; [file2] ...<br></code></pre></td></tr></table></figure><p>渲染文件。</p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>-o</code>, <code>--output</code></td><td>设置输出路径</td></tr></tbody></table><h2 id="migrate"><a href="#migrate" class="headerlink" title="migrate"></a>migrate</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo migrate &lt;<span class="hljs-built_in">type</span>&gt;<br></code></pre></td></tr></table></figure><p>从其他博客系统 <a href="migration.html">迁移内容</a>。</p><h2 id="clean"><a href="#clean" class="headerlink" title="clean"></a>clean</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo clean<br></code></pre></td></tr></table></figure><p>清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)。</p><p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p><h2 id="list"><a href="#list" class="headerlink" title="list"></a>list</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo list &lt;<span class="hljs-built_in">type</span>&gt;<br></code></pre></td></tr></table></figure><p>列出网站资料。</p><h2 id="version"><a href="#version" class="headerlink" title="version"></a>version</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo version<br></code></pre></td></tr></table></figure><p>显示 Hexo 版本。</p><h2 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h2><h3 id="安全模式"><a href="#安全模式" class="headerlink" title="安全模式"></a>安全模式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo --safe<br></code></pre></td></tr></table></figure><p>在安全模式下，不会载入插件和脚本。当您在安装新插件遭遇问题时，可以尝试以安全模式重新执行。</p><h3 id="调试模式"><a href="#调试模式" class="headerlink" title="调试模式"></a>调试模式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo --debug<br></code></pre></td></tr></table></figure><p>在终端中显示调试信息并记录到 <code>debug.log</code>。当您碰到问题时，可以尝试用调试模式重新执行一次，并 <a href="https://github.com/hexojs/hexo/issues/new">提交调试信息到 GitHub</a>。</p><h3 id="简洁模式"><a href="#简洁模式" class="headerlink" title="简洁模式"></a>简洁模式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo --silent<br></code></pre></td></tr></table></figure><p>隐藏终端信息。</p><h3 id="自定义配置文件的路径"><a href="#自定义配置文件的路径" class="headerlink" title="自定义配置文件的路径"></a>自定义配置文件的路径</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 使用 custom.yml 代替默认的 _config.yml</span><br>$ hexo server --config custom.yml<br><br><span class="hljs-comment"># 使用 custom.yml 和 custom2.json，其中 custom2.json 优先级更高</span><br>$ hexo generate --config custom.yml,custom2.json,custom3.yml<br></code></pre></td></tr></table></figure><p>自定义配置文件的路径，指定这个参数后将不再使用默认的 <code>_config.yml</code>。<br>你可以使用一个 YAML 或 JSON 文件的路径，也可以使用逗号分隔（无空格）的多个 YAML 或 JSON 文件的路径。例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 使用 custom.yml 代替默认的 _config.yml</span><br>$ hexo server --config custom.yml<br><br><span class="hljs-comment"># 使用 custom.yml, custom2.json 和 custom3.yml，其中 custom3.yml 优先级最高，其次是 custom2.json</span><br>$ hexo generate --config custom.yml,custom2.json,custom3.yml<br></code></pre></td></tr></table></figure><p>当你指定了多个配置文件以后，Hexo 会按顺序将这部分配置文件合并成一个 <code>_multiconfig.yml</code>。如果遇到重复的配置，排在后面的文件的配置会覆盖排在前面的文件的配置。这个原则适用于任意数量、任意深度的 YAML 和 JSON 文件。</p><h3 id="显示草稿"><a href="#显示草稿" class="headerlink" title="显示草稿"></a>显示草稿</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo --draft<br></code></pre></td></tr></table></figure><p>显示 <code>source/_drafts</code> 文件夹中的草稿文章。</p><h3 id="自定义-CWD"><a href="#自定义-CWD" class="headerlink" title="自定义 CWD"></a>自定义 CWD</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo --cwd /path/to/cwd<br></code></pre></td></tr></table></figure><p>自定义当前工作目录（Current working directory）的路径。</p><p>更多用法: <a href="https://hexo.io/zh-cn/docs/">Hexo 官方文档</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
